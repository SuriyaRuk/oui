(window["discover_bundle_jsonpfunction"]=window["discover_bundle_jsonpfunction"]||[]).push([[6],{165:function(module,exports,__webpack_require__){switch(window.__osdThemeTag__){case"v7dark":return __webpack_require__(166);case"v7light":return __webpack_require__(168);case"v8dark":return __webpack_require__(170);case"v8light":return __webpack_require__(172)}},166:function(module,exports,__webpack_require__){var api=__webpack_require__(11);var content=__webpack_require__(167);content=content.__esModule?content.default:content;if(typeof content==="string"){content=[[module.i,content,""]]}var options={};options.insert="head";options.singleton=false;var update=api(content,options);module.exports=content.locals||{}},167:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(7);var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);var ___CSS_LOADER_EXPORT___=_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()((function(i){return i[1]}));___CSS_LOADER_EXPORT___.push([module.i,"/*!\n * SPDX-License-Identifier: Apache-2.0\n *\n * The OpenSearch Contributors require contributions made to\n * this file be licensed under the Apache-2.0 license or a\n * compatible open source license.\n *\n * Modifications Copyright OpenSearch Contributors. See\n * GitHub history for details.\n */\n\n.embPanel .osdDocTable__container {\n  scrollbar-width: thin;\n    flex: 1 1 0;\n    overflow: auto;\n   }\n  .embPanel .osdDocTable__container::-webkit-scrollbar {\n    width: 16px;\n    height: 16px; }\n  .embPanel .osdDocTable__container::-webkit-scrollbar-thumb {\n    background-color: rgba(152, 162, 179, 0.5);\n    border: 6px solid transparent;\n    background-clip: content-box; }\n  .embPanel .osdDocTable__container::-webkit-scrollbar-corner, .embPanel .osdDocTable__container::-webkit-scrollbar-track {\n    background-color: transparent; }\n",""]);__webpack_exports__["default"]=___CSS_LOADER_EXPORT___},168:function(module,exports,__webpack_require__){var api=__webpack_require__(11);var content=__webpack_require__(169);content=content.__esModule?content.default:content;if(typeof content==="string"){content=[[module.i,content,""]]}var options={};options.insert="head";options.singleton=false;var update=api(content,options);module.exports=content.locals||{}},169:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(7);var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);var ___CSS_LOADER_EXPORT___=_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()((function(i){return i[1]}));___CSS_LOADER_EXPORT___.push([module.i,"/*!\n * SPDX-License-Identifier: Apache-2.0\n *\n * The OpenSearch Contributors require contributions made to\n * this file be licensed under the Apache-2.0 license or a\n * compatible open source license.\n *\n * Modifications Copyright OpenSearch Contributors. See\n * GitHub history for details.\n */\n\n.embPanel .osdDocTable__container {\n  scrollbar-width: thin;\n    flex: 1 1 0;\n    overflow: auto;\n   }\n  .embPanel .osdDocTable__container::-webkit-scrollbar {\n    width: 16px;\n    height: 16px; }\n  .embPanel .osdDocTable__container::-webkit-scrollbar-thumb {\n    background-color: rgba(105, 112, 125, 0.5);\n    border: 6px solid transparent;\n    background-clip: content-box; }\n  .embPanel .osdDocTable__container::-webkit-scrollbar-corner, .embPanel .osdDocTable__container::-webkit-scrollbar-track {\n    background-color: transparent; }\n",""]);__webpack_exports__["default"]=___CSS_LOADER_EXPORT___},170:function(module,exports,__webpack_require__){var api=__webpack_require__(11);var content=__webpack_require__(171);content=content.__esModule?content.default:content;if(typeof content==="string"){content=[[module.i,content,""]]}var options={};options.insert="head";options.singleton=false;var update=api(content,options);module.exports=content.locals||{}},171:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(7);var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);var ___CSS_LOADER_EXPORT___=_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()((function(i){return i[1]}));___CSS_LOADER_EXPORT___.push([module.i,"/*!\n * SPDX-License-Identifier: Apache-2.0\n *\n * The OpenSearch Contributors require contributions made to\n * this file be licensed under the Apache-2.0 license or a\n * compatible open source license.\n *\n * Modifications Copyright OpenSearch Contributors. See\n * GitHub history for details.\n */\n\n.embPanel .osdDocTable__container {\n  scrollbar-width: thin;\n    flex: 1 1 0;\n    overflow: auto;\n   }\n  .embPanel .osdDocTable__container::-webkit-scrollbar {\n    width: 16px;\n    height: 16px; }\n  .embPanel .osdDocTable__container::-webkit-scrollbar-thumb {\n    background-color: rgba(141, 152, 163, 0.5);\n    border: 6px solid transparent;\n    background-clip: content-box; }\n  .embPanel .osdDocTable__container::-webkit-scrollbar-corner, .embPanel .osdDocTable__container::-webkit-scrollbar-track {\n    background-color: transparent; }\n",""]);__webpack_exports__["default"]=___CSS_LOADER_EXPORT___},172:function(module,exports,__webpack_require__){var api=__webpack_require__(11);var content=__webpack_require__(173);content=content.__esModule?content.default:content;if(typeof content==="string"){content=[[module.i,content,""]]}var options={};options.insert="head";options.singleton=false;var update=api(content,options);module.exports=content.locals||{}},173:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(7);var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);var ___CSS_LOADER_EXPORT___=_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()((function(i){return i[1]}));___CSS_LOADER_EXPORT___.push([module.i,"/*!\n * SPDX-License-Identifier: Apache-2.0\n *\n * The OpenSearch Contributors require contributions made to\n * this file be licensed under the Apache-2.0 license or a\n * compatible open source license.\n *\n * Modifications Copyright OpenSearch Contributors. See\n * GitHub history for details.\n */\n\n.embPanel .osdDocTable__container {\n  scrollbar-width: thin;\n    flex: 1 1 0;\n    overflow: auto;\n   }\n  .embPanel .osdDocTable__container::-webkit-scrollbar {\n    width: 16px;\n    height: 16px; }\n  .embPanel .osdDocTable__container::-webkit-scrollbar-thumb {\n    background-color: rgba(90, 104, 117, 0.5);\n    border: 6px solid transparent;\n    background-clip: content-box; }\n  .embPanel .osdDocTable__container::-webkit-scrollbar-corner, .embPanel .osdDocTable__container::-webkit-scrollbar-track {\n    background-color: transparent; }\n",""]);__webpack_exports__["default"]=___CSS_LOADER_EXPORT___},177:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,"SearchEmbeddable",(function(){return search_embeddable_SearchEmbeddable}));var external_osdSharedDeps_Lodash_=__webpack_require__(12);var external_osdSharedDeps_Rxjs_=__webpack_require__(24);var external_osdSharedDeps_React_=__webpack_require__(0);var external_osdSharedDeps_React_default=__webpack_require__.n(external_osdSharedDeps_React_);var external_osdSharedDeps_ReactDom_=__webpack_require__(63);var external_osdSharedDeps_ReactDom_default=__webpack_require__.n(external_osdSharedDeps_ReactDom_);var external_osdSharedDeps_OsdI18n_=__webpack_require__(1);var public_=__webpack_require__(66);var inspector_public_=__webpack_require__(65);var data_public_=__webpack_require__(4);var embeddable_public_=__webpack_require__(21);var get_default_sort=__webpack_require__(77);var get_sort_for_search_source=__webpack_require__(76);var opensearch_dashboards_services=__webpack_require__(5);var constants=__webpack_require__(14);var common=__webpack_require__(8);var external_osdSharedDeps_OsdI18nReact_=__webpack_require__(6);var external_osdSharedDeps_ElasticEui_=__webpack_require__(2);var data_grid_table=__webpack_require__(80);var visualizations_public_=__webpack_require__(71);var search_embeddable=__webpack_require__(165);const DataGridTableMemoized=external_osdSharedDeps_React_default.a.memo(props=>external_osdSharedDeps_React_default.a.createElement(data_grid_table["a"],props));function SearchEmbeddableComponent(_ref){let{searchProps:searchProps}=_ref;const discoverEmbeddableProps={columns:searchProps.columns,indexPattern:searchProps.indexPattern,onAddColumn:searchProps.onAddColumn,onFilter:searchProps.onFilter,onRemoveColumn:searchProps.onRemoveColumn,onSort:searchProps.onSort,rows:searchProps.rows,onSetColumns:searchProps.onSetColumns,sort:searchProps.sort,displayTimeColumn:searchProps.displayTimeColumn,services:searchProps.services,totalHitCount:searchProps.totalHitCount,title:searchProps.title,description:searchProps.description};return external_osdSharedDeps_React_default.a.createElement(external_osdSharedDeps_OsdI18nReact_["I18nProvider"],null,external_osdSharedDeps_React_default.a.createElement(external_osdSharedDeps_ElasticEui_["EuiFlexGroup"],{gutterSize:"xs",direction:"column",responsive:false,"data-test-subj":"embeddedSavedSearchDocTable"},discoverEmbeddableProps.totalHitCount!==0?external_osdSharedDeps_React_default.a.createElement(external_osdSharedDeps_ElasticEui_["EuiFlexItem"],{style:{minHeight:0},className:"osdDocTable__container"},external_osdSharedDeps_React_default.a.createElement(DataGridTableMemoized,discoverEmbeddableProps)):external_osdSharedDeps_React_default.a.createElement(external_osdSharedDeps_ElasticEui_["EuiFlexItem"],null,external_osdSharedDeps_React_default.a.createElement(visualizations_public_["VisualizationNoResults"],null))))}var state_management_common=__webpack_require__(15);var utils_columns=__webpack_require__(18);function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}class search_embeddable_SearchEmbeddable extends embeddable_public_["Embeddable"]{constructor(_ref,initialInput,executeTriggerActions,parent){let{savedSearch:savedSearch,editUrl:editUrl,editPath:editPath,indexPatterns:indexPatterns,editable:editable,filterManager:filterManager,services:services}=_ref;super(initialInput,{defaultTitle:savedSearch.title,editUrl:editUrl,editPath:editPath,editApp:"discover",indexPatterns:indexPatterns,editable:editable},parent);this.executeTriggerActions=executeTriggerActions;_defineProperty(this,"savedSearch",void 0);_defineProperty(this,"inspectorAdaptors",void 0);_defineProperty(this,"searchProps",void 0);_defineProperty(this,"panelTitle","");_defineProperty(this,"filtersSearchSource",void 0);_defineProperty(this,"autoRefreshFetchSubscription",void 0);_defineProperty(this,"subscription",void 0);_defineProperty(this,"type",constants["a"]);_defineProperty(this,"services",void 0);_defineProperty(this,"filterManager",void 0);_defineProperty(this,"abortController",void 0);_defineProperty(this,"prevTimeRange",void 0);_defineProperty(this,"prevFilters",void 0);_defineProperty(this,"prevQuery",void 0);_defineProperty(this,"node",void 0);_defineProperty(this,"fetch",async()=>{if(!this.searchProps)return;const{searchSource:searchSource}=this.savedSearch;if(this.abortController)this.abortController.abort();this.abortController=new AbortController;searchSource.setField("size",Object(opensearch_dashboards_services["f"])().uiSettings.get(common["h"]));searchSource.setField("sort",Object(get_sort_for_search_source["a"])(this.searchProps.sort,this.searchProps.indexPattern,Object(opensearch_dashboards_services["f"])().uiSettings.get(common["j"])));this.inspectorAdaptors.requests.reset();const title=external_osdSharedDeps_OsdI18n_["i18n"].translate("discover.embeddable.inspectorRequestDataTitle",{defaultMessage:"Data"});const description=external_osdSharedDeps_OsdI18n_["i18n"].translate("discover.embeddable.inspectorRequestDescription",{defaultMessage:"This request queries OpenSearch to fetch the data for the search."});const inspectorRequest=this.inspectorAdaptors.requests.start(title,{description:description});inspectorRequest.stats(Object(opensearch_dashboards_services["d"])(searchSource));searchSource.getSearchRequestBody().then(body=>{inspectorRequest.json(body)});this.updateOutput({loading:true,error:undefined});this.searchProps.isLoading=true;try{const resp=await searchSource.fetch({abortSignal:this.abortController.signal});this.updateOutput({loading:false,error:undefined});inspectorRequest.stats(Object(opensearch_dashboards_services["e"])(resp,searchSource)).ok({json:resp});this.searchProps.rows=resp.hits.hits;this.searchProps.totalHitCount=resp.hits.total;this.searchProps.isLoading=false}catch(error){this.updateOutput({loading:false,error:error});this.searchProps.isLoading=false}});this.services=services;this.filterManager=filterManager;this.savedSearch=savedSearch;this.inspectorAdaptors={requests:new inspector_public_["RequestAdapter"]};this.initializeSearchProps();this.autoRefreshFetchSubscription=Object(opensearch_dashboards_services["f"])().timefilter.getAutoRefreshFetch$().subscribe(this.fetch);this.subscription=external_osdSharedDeps_Rxjs_["merge"](this.getOutput$(),this.getInput$()).subscribe(()=>{this.panelTitle=this.output.title||"";if(this.searchProps){this.pushContainerStateParamsToProps(this.searchProps)}})}getInspectorAdapters(){return this.inspectorAdaptors}getSavedSearch(){return this.savedSearch}render(node){if(!this.searchProps){throw new Error("Search scope not defined")}if(this.node){external_osdSharedDeps_ReactDom_default.a.unmountComponentAtNode(this.node)}this.node=node}destroy(){super.destroy();if(this.searchProps){delete this.searchProps}if(this.subscription){this.subscription.unsubscribe()}if(this.node){external_osdSharedDeps_ReactDom_default.a.unmountComponentAtNode(this.node)}if(this.autoRefreshFetchSubscription){this.autoRefreshFetchSubscription.unsubscribe()}if(this.abortController)this.abortController.abort()}initializeSearchProps(){const{searchSource:searchSource}=this.savedSearch;const indexPattern=searchSource.getField("index");if(!indexPattern){return}const sort=Object(get_default_sort["a"])(indexPattern,this.services.uiSettings.get(common["j"],"desc"));this.savedSearch.sort=sort;const searchProps={columns:this.savedSearch.columns,sort:[],inspectorAdapters:this.inspectorAdaptors,rows:[],description:this.savedSearch.description,title:this.savedSearch.title,services:this.services,indexPattern:indexPattern,isLoading:false,displayTimeColumn:!this.services.uiSettings.get(common["e"],false)};const timeRangeSearchSource=searchSource.create();timeRangeSearchSource.setField("filter",()=>{if(!this.searchProps||!this.input.timeRange)return;return Object(data_public_["getTime"])(indexPattern,this.input.timeRange)});this.filtersSearchSource=searchSource.create();this.filtersSearchSource.setParent(timeRangeSearchSource);searchSource.setParent(this.filtersSearchSource);searchProps.onSort=newSort=>{this.updateInput({sort:newSort})};searchProps.onAddColumn=columnName=>{if(!searchProps.columns){return}const updatedColumns=Object(utils_columns["a"])(state_management_common["a"](searchProps.columns,{column:columnName}));this.updateInput({columns:updatedColumns})};searchProps.onRemoveColumn=columnName=>{if(!searchProps.columns){return}const updatedColumns=state_management_common["b"](searchProps.columns,columnName);const updatedSort=searchProps.sort&&searchProps.sort.length?searchProps.sort.filter(s=>s[0]!==columnName):[];this.updateInput({sort:updatedSort,columns:updatedColumns})};searchProps.onMoveColumn=(columnName,newIndex)=>{if(!searchProps.columns){return}const oldIndex=searchProps.columns.indexOf(columnName);const updatedColumns=state_management_common["c"](searchProps.columns,oldIndex,newIndex);this.updateInput({columns:updatedColumns})};searchProps.onSetColumns=columnNames=>{const columns=Object(utils_columns["a"])(columnNames);this.updateInput({columns:columns})};searchProps.onFilter=async(field,value,operator)=>{let filters=data_public_["opensearchFilters"].generateFilters(this.filterManager,field,value,operator,indexPattern.id);filters=filters.map(filter=>({...filter,$state:{store:data_public_["opensearchFilters"].FilterStateStore.APP_STATE}}));await this.executeTriggerActions(public_["APPLY_FILTER_TRIGGER"],{embeddable:this,filters:filters})};this.pushContainerStateParamsToProps(searchProps)}reload(){if(this.searchProps){this.pushContainerStateParamsToProps(this.searchProps,true)}}renderComponent(node,searchProps){if(!this.searchProps){return}const props={searchProps:searchProps};const MemorizedSearchEmbeddableComponent=external_osdSharedDeps_React_default.a.memo(SearchEmbeddableComponent);external_osdSharedDeps_ReactDom_default.a.render(external_osdSharedDeps_React_default.a.createElement(MemorizedSearchEmbeddableComponent,props),node)}async pushContainerStateParamsToProps(searchProps){let force=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;const isFetchRequired=force||!data_public_["opensearchFilters"].onlyDisabledFiltersChanged(this.input.filters,this.prevFilters)||!Object(external_osdSharedDeps_Lodash_["isEqual"])(this.prevQuery,this.input.query)||!Object(external_osdSharedDeps_Lodash_["isEqual"])(this.prevTimeRange,this.input.timeRange)||!Object(external_osdSharedDeps_Lodash_["isEqual"])(searchProps.sort,this.input.sort||this.savedSearch.sort);searchProps.columns=this.input.columns||this.savedSearch.columns;searchProps.sort=this.input.sort||this.savedSearch.sort;searchProps.sharedItemTitle=this.panelTitle;if(isFetchRequired){this.filtersSearchSource.setField("filter",this.input.filters);this.filtersSearchSource.setField("query",this.input.query);this.prevFilters=this.input.filters;this.prevQuery=this.input.query;this.prevTimeRange=this.input.timeRange;this.searchProps=searchProps;await this.fetch()}else if(this.searchProps){this.searchProps=searchProps}if(this.node){this.renderComponent(this.node,this.searchProps)}}}},75:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"b",(function(){return isSortable}));__webpack_require__.d(__webpack_exports__,"a",(function(){return getSort}));var lodash__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(12);var lodash__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);function isSortable(fieldName,indexPattern){const field=indexPattern.getFieldByName(fieldName);return field&&field.sortable}function createSortObject(sortPair,indexPattern){if(Array.isArray(sortPair)&&sortPair.length===2&&isSortable(String(sortPair[0]),indexPattern)){const[field,direction]=sortPair;return{[field]:direction}}else if(lodash__WEBPACK_IMPORTED_MODULE_0___default.a.isPlainObject(sortPair)&&isSortable(Object.keys(sortPair)[0],indexPattern)){return sortPair}}function isLegacySort(sort){return sort.length===2&&typeof sort[0]==="string"&&(sort[1]==="desc"||sort[1]==="asc")}function getSort(sort,indexPattern){if(Array.isArray(sort)){if(isLegacySort(sort)){return[{[sort[0]]:sort[1]}]}return sort.map(sortPair=>createSortObject(sortPair,indexPattern)).filter(sortPairObj=>typeof sortPairObj==="object")}return[]}function getSortArray(sort,indexPattern){return getSort(sort,indexPattern).map(sortPair=>Object.entries(sortPair).pop())}},76:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return getSortForSearchSource}));var _get_sort__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(75);var _get_default_sort__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(77);function getSortForSearchSource(sort,indexPattern){let defaultDirection=arguments.length>2&&arguments[2]!==undefined?arguments[2]:"desc";if(!sort||!indexPattern){return[]}else if(Array.isArray(sort)&&sort.length===0){sort=Object(_get_default_sort__WEBPACK_IMPORTED_MODULE_1__["a"])(indexPattern,defaultDirection)}const{timeFieldName:timeFieldName}=indexPattern;return Object(_get_sort__WEBPACK_IMPORTED_MODULE_0__["a"])(sort,indexPattern).map(sortPair=>{if(indexPattern.isTimeNanosBased()&&timeFieldName&&sortPair[timeFieldName]){return{[timeFieldName]:{order:sortPair[timeFieldName],numeric_type:"date_nanos"}}}return sortPair})}},77:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return getDefaultSort}));var _get_sort__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(75);function getDefaultSort(indexPattern){let defaultSortOrder=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"desc";if(indexPattern.timeFieldName&&Object(_get_sort__WEBPACK_IMPORTED_MODULE_0__["b"])(indexPattern.timeFieldName,indexPattern)){return[[indexPattern.timeFieldName,defaultSortOrder]]}else{return[["_score",defaultSortOrder]]}}}}]);